#======================================================================
# # Powerlevel10k:

# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block; everything else may go below.
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

#======================================================================
# ZSH plugin manager:

source ~/host-setup/antigen.zsh

# Load the oh-my-zsh's library.
antigen use oh-my-zsh

# Bundles from the default repo (robbyrussell's oh-my-zsh).
antigen bundle git
# antigen bundle heroku
# antigen bundle pip
# antigen bundle lein
antigen bundle command-not-found
antigen bundle autojump
antigen bundle colored-man-pages
antigen bundle copybuffer
antigen bundle copypath
antigen bundle copyfile

# zsh vi mode bundle.
antigen bundle jeffreytse/zsh-vi-mode

# Syntax highlighting bundle.
antigen bundle zsh-users/zsh-syntax-highlighting
# zsh-autosuggestions bundle.
antigen bundle zsh-users/zsh-autosuggestions

# Load the theme.
# antigen theme robbyrussell
antigen theme romkatv/powerlevel10k

# Tell Antigen that you're done.
antigen apply
#======================================================================

# If you come from bash you might have to change your $PATH.
export PATH=$HOME/bin:$HOME/.local/bin:/usr/local/bin:$PATH

# Path to your Oh My Zsh installation.
export ZSH=$HOME/.oh-my-zsh

# Set name of the theme to load --- if set to "random", it will
# load a random theme each time Oh My Zsh is loaded, in which case,
# to know which specific one was loaded, run: echo $RANDOM_THEME
# See https://github.com/ohmyzsh/ohmyzsh/wiki/Themes
# ZSH_THEME="robbyrussell"

# Set list of themes to pick from when loading at random
# Setting this variable when ZSH_THEME=random will cause zsh to load
# a theme from this variable instead of looking in $ZSH/themes/
# If set to an empty array, this variable will have no effect.
# ZSH_THEME_RANDOM_CANDIDATES=( "robbyrussell" "agnoster" )

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion.
# Case-sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# Uncomment one of the following lines to change the auto-update behavior
# zstyle ':omz:update' mode disabled  # disable automatic updates
# zstyle ':omz:update' mode auto      # update automatically without asking
# zstyle ':omz:update' mode reminder  # just remind me to update when it's time

# Uncomment the following line to change how often to auto-update (in days).
# zstyle ':omz:update' frequency 13

# Uncomment the following line if pasting URLs and other text is messed up.
# DISABLE_MAGIC_FUNCTIONS="true"

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# You can also set it to another string to have that shown instead of the default red dots.
# e.g. COMPLETION_WAITING_DOTS="%F{yellow}waiting...%f"
# Caution: this setting can cause issues with multiline prompts in zsh < 5.7.1 (see #5765)
# COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# You can set one of the optional three formats:
# "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# or set a custom format using the strftime function format specifications,
# see 'man strftime' for details.
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load?
# Standard plugins can be found in $ZSH/plugins/
# Custom plugins may be added to $ZSH_CUSTOM/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
# plugins=(zsh-syntax-highlighting zsh-vi-mode zsh-autosuggestions git autojump colored-man-pages copybuffer copypath copyfile)
# plugins=(zsh-autosuggestions git autojump colored-man-pages copybuffer copypath copyfile)

source $ZSH/oh-my-zsh.sh

# User configuration

# export MANPATH="/usr/local/man:$MANPATH"

# You may need to manually set your language environment
# export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
# if [[ -n $SSH_CONNECTION ]]; then
#   export EDITOR='vim'
# else
#   export EDITOR='nvim'
# fi

# Compilation flags
# export ARCHFLAGS="-arch $(uname -m)"

# Set personal aliases, overriding those provided by Oh My Zsh libs,
# plugins, and themes. Aliases can be placed here, though Oh My Zsh
# users are encouraged to define aliases within a top-level file in
# the $ZSH_CUSTOM folder, with .zsh extension. Examples:
# - $ZSH_CUSTOM/aliases.zsh
# - $ZSH_CUSTOM/macos.zsh
# For a full list of active aliases, run `alias`.
#
# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"

alias cls='clear'
alias l='ls -CF'
alias ll='ls -l'
alias la='ls -A'
alias lla='ls -alF'
alias vi='nvim'
alias javac="javac -J-Dfile.encoding=utf8"
alias grep="grep --color=auto"
alias -s html=mate   # 在命令行直接输入后缀为 html 的文件名，会在 TextMate 中打开
alias -s rb=mate     # 在命令行直接输入 ruby 文件，会在 TextMate 中打开
#alias -s py=vi       # 在命令行直接输入 python 文件，会用 vim 中打开，以下类似
#alias -s js=vi
alias -s c=vi
alias -s java=vi
alias -s txt=vi
alias -s gz='tar -xzvf'
alias -s tgz='tar -xzvf'
alias -s zip='unzip'
alias -s bz2='tar -xjvf'

alias -s pdf=evince
alias -s doc=evince

#======================================================================
# autojump setup:

# for case: install autojump manually
[[ -s /home/houzq/.autojump/etc/profile.d/autojump.sh ]] && source /home/houzq/.autojump/etc/profile.d/autojump.sh
# for case: install autojump with 'sudo apt install autojump'
[[ -s /usr/share/autojump/autojump.sh ]] && source /usr/share/autojump/autojump.sh
#======================================================================

# Add vi-mode indicator
# VIMODE='-- INSERT --'
# function zle-line-init zle-keymap-select {
#     VIMODE="${${KEYMAP/vicmd/-- NORMAL --}/(main|viins)/-- INSERT --}"
#     zle reset-prompt
# }
# zle -N zle-line-init
# zle -N zle-keymap-select
# 
# RPROMPT='%{$fg[green]%}${VIMODE}%{$reset_color%}'

#======================================================================
# export PATH=~/bin:$PATH
# export PATH=~/.local/bin:"$PATH"
# export PATH="`ruby -e 'puts Gem.user_dir'`/bin:$PATH"
export PATH="/opt/nvim-linux64/bin:$PATH"
#======================================================================

# automaticly start
#screenfetch
# tmux ls
#tmux -2 at -d -t 0

#======================================================================
# proxy setups:

# export https_proxy=http://wbinxf42681:Welcome%402017@apac.nics.nxp.com:8080/
# export http_proxy=http://wbinxf42681:Welcome%402017@apac.nics.nxp.com:8080/
# export ftp_proxy=http://wbinxf42681:Welcome%402017@apac.nics.nxp.com:8080/
export ftp_proxy=http://wbi%5cnxf42681:Welcome%402017@apac.nics.nxp.com:8080
export http_proxy=http://wbi%5cnxf42681:Welcome%402017@apac.nics.nxp.com:8080
export https_proxy=http://wbi%5cnxf42681:Welcome%402017@apac.nics.nxp.com:8080

#export https_proxy=
#export http_proxy=
#export ftp_proxy=
#======================================================================

#======================================================================
# nxp-tools:

#eval "$(register-python-argcomplete nxp-tools)"
#======================================================================

#======================================================================
# workaround for yocto build on Ubuntu 24.04:

# sudo apparmor_parser -R /etc/apparmor.d/unprivileged_userns
#======================================================================

#======================================================================
# pyenv:

# # Load pyenv automatically by appending
# # the following to
# # ~/.bash_profile if it exists, otherwise ~/.profile (for login shells)
# # and ~/.bashrc (for interactive shells) :
#
# export PYENV_ROOT="$HOME/.pyenv"
# [[ -d $PYENV_ROOT/bin ]] && export PATH="$PYENV_ROOT/bin:$PATH"
# eval "$(pyenv init -)"
#
# # Restart your shell for the changes to take effect.
#
# # Load pyenv-virtualenv automatically by adding
# # the following to ~/.bashrc:
#
# eval "$(pyenv virtualenv-init -)"
#======================================================================

#======================================================================
# Options:

# correct commands
setopt CORRECT_ALL

# enable completeion
export ZSH_AUTOSUGGEST_STRATEGY=(history completion)
# bindkey '^ ' autosuggest-accept

setopt nonomatch
#======================================================================

# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
[[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh
